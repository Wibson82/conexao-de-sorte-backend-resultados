#!/bin/bash

# Script de Diagn√≥stico Completo do Runner srv649924
# Identifica e corrige problemas de permiss√£o e conectividade

set -e

echo "üîç DIAGN√ìSTICO COMPLETO DO RUNNER srv649924"
echo "============================================="
echo


# Fun√ß√£o para log colorido
log_info() { echo -e "\033[34m[INFO]\033[0m $1"; }
log_warn() { echo -e "\033[33m[WARN]\033[0m $1"; }
log_error() { echo -e "\033[31m[ERROR]\033[0m $1"; }
log_success() { echo -e "\033[32m[SUCCESS]\033[0m $1"; }

# 1. VERIFICAR STATUS ATUAL
echo "üìä 1. STATUS ATUAL DO RUNNER"
echo "----------------------------"
log_info "Verificando status do servi√ßo..."
sudo systemctl status actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service --no-pager -l
echo

# 2. ANALISAR LOGS DETALHADOS
echo "üìã 2. AN√ÅLISE DE LOGS DETALHADOS"
echo "--------------------------------"
log_info "√öltimos 50 logs do runner..."
sudo journalctl -u actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service -n 50 --no-pager
echo

# 3. VERIFICAR DIRET√ìRIO E PERMISS√ïES
echo "üìÅ 3. VERIFICA√á√ÉO DE DIRET√ìRIOS E PERMISS√ïES"
echo "--------------------------------------------"
log_info "Verificando diret√≥rio do runner..."
ls -la /opt/actions-runner/
echo

log_info "Verificando permiss√µes dos arquivos cr√≠ticos..."
ls -la /opt/actions-runner/runsvc.sh
ls -la /opt/actions-runner/bin/RunnerService.js
ls -la /opt/actions-runner/externals/node20/bin/node
echo

# 4. VERIFICAR USU√ÅRIO E GRUPOS
echo "üë§ 4. VERIFICA√á√ÉO DE USU√ÅRIO E GRUPOS"
echo "------------------------------------"
log_info "Verificando usu√°rio do runner..."
ps aux | grep RunnerService.js | grep -v grep
echo

log_info "Verificando grupos do usu√°rio actions-runner..."
id actions-runner 2>/dev/null || log_warn "Usu√°rio actions-runner n√£o encontrado"
echo

# 5. TESTAR CONECTIVIDADE
echo "üåê 5. TESTE DE CONECTIVIDADE"
echo "----------------------------"
log_info "Testando conectividade com GitHub..."
curl -s -o /dev/null -w "Status HTTP: %{http_code}\nTempo: %{time_total}s\n" https://api.github.com
echo

log_info "Testando resolu√ß√£o DNS..."
nslookup github.com
echo

# 6. VERIFICAR ESPA√áO EM DISCO
echo "üíæ 6. VERIFICA√á√ÉO DE ESPA√áO EM DISCO"
echo "-----------------------------------"
log_info "Espa√ßo dispon√≠vel..."
df -h /opt/actions-runner/
echo

log_info "Inodes dispon√≠veis..."
df -i /opt/actions-runner/
echo

# 7. VERIFICAR PROCESSOS
echo "‚öôÔ∏è 7. VERIFICA√á√ÉO DE PROCESSOS"
echo "------------------------------"
log_info "Processos relacionados ao runner..."
ps aux | grep -E "(runner|github|actions)" | grep -v grep
echo

# 8. CORRE√á√ïES AUTOM√ÅTICAS
echo "üîß 8. APLICANDO CORRE√á√ïES AUTOM√ÅTICAS"
echo "------------------------------------"

# Parar o servi√ßo
log_info "Parando o servi√ßo do runner..."
sudo systemctl stop actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service
sleep 3

# Corrigir permiss√µes
log_info "Corrigindo permiss√µes do diret√≥rio..."
sudo chown -R actions-runner:actions-runner /opt/actions-runner/
sudo chmod +x /opt/actions-runner/runsvc.sh
sudo chmod +x /opt/actions-runner/externals/node20/bin/node
sudo chmod +x /opt/actions-runner/bin/RunnerService.js

# Limpar logs antigos se necess√°rio
log_info "Limpando logs antigos..."
sudo find /opt/actions-runner/_diag/ -name "*.log" -mtime +7 -delete 2>/dev/null || true

# Verificar e criar diret√≥rios necess√°rios
log_info "Verificando diret√≥rios necess√°rios..."
sudo mkdir -p /opt/actions-runner/_diag
sudo mkdir -p /opt/actions-runner/_work
sudo chown -R actions-runner:actions-runner /opt/actions-runner/_diag
sudo chown -R actions-runner:actions-runner /opt/actions-runner/_work

# Reiniciar o servi√ßo
log_info "Reiniciando o servi√ßo do runner..."
sudo systemctl start actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service
sleep 5

# 9. VERIFICA√á√ÉO FINAL
echo "‚úÖ 9. VERIFICA√á√ÉO FINAL"
echo "----------------------"
log_info "Status ap√≥s corre√ß√µes..."
sudo systemctl status actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service --no-pager
echo

log_info "Verificando no GitHub..."
gh api repos/Wibson82/conexao-de-sorte-backend-resultados/actions/runners --jq '.runners[] | select(.name == "srv649924") | {name: .name, status: .status, busy: .busy}'
echo

# 10. MONITORAMENTO EM TEMPO REAL
echo "üì° 10. INICIANDO MONITORAMENTO"
echo "-----------------------------"
log_info "Monitorando logs em tempo real por 30 segundos..."
log_info "Pressione Ctrl+C para interromper"
echo

timeout 30s sudo journalctl -u actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service -f --no-pager || true

echo
log_success "Diagn√≥stico completo finalizado!"
echo
echo "üìã PR√ìXIMOS PASSOS:"
echo "1. Verificar se o runner aparece como 'online' no GitHub"
echo "2. Testar execu√ß√£o de um workflow simples"
echo "3. Monitorar logs por alguns minutos"
echo
echo "üîß COMANDOS √öTEIS:"
echo "- Status: sudo systemctl status actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service"
echo "- Logs: sudo journalctl -u actions.runner.Wibson82-conexao-de-sorte-backend-resultados.srv649924.service -f"
echo "- GitHub: gh api repos/Wibson82/conexao-de-sorte-backend-resultados/actions/runners"
echo