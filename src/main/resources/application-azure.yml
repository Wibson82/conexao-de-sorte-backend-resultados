# =============================================================================
# CONFIGURAÇÃO AZURE KEY VAULT - RESULTADOS MICROSERVICE
# =============================================================================
# ✅ Configuração específica para o microserviço de resultados
# ✅ Usa Spring Cloud Azure para integração com Azure Key Vault
# ✅ Compatível com deployment via Docker
# =============================================================================

spring:
  config:
    activate:
      on-profile: azure
    import:
      - "optional:configtree:/run/secrets/"
      - "optional:classpath:application-prod.yml"

  # ===== SPRING CLOUD AZURE (DESABILITADO POR PADRÃO) =====
  cloud:
    azure:
      profile:
        tenant-id: ${AZURE_TENANT_ID:}
      credential:
        client-id: ${AZURE_CLIENT_ID:}
        managed-identity-enabled: false

      # Azure Key Vault Secrets - COMPLETAMENTE DESABILITADO sem configuração adequada
      keyvault:
        secret:
          enabled: false

  # ===== DATABASE CONFIGURATION (R2DBC REATIVO) =====
  # Primary: Azure Key Vault secrets via environment variables
  # Fallback: Container environment variables
  r2dbc:
    url: ${SPRING_DATASOURCE_URL:r2dbc:mysql://conexao-mysql:3306/conexao_sorte_resultados?useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:conexao_sorte}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30m
      max-acquire-time: 60s

  # ===== FLYWAY CONFIGURATION (JDBC para migrations) =====
  flyway:
    enabled: true
    url: jdbc:mysql://conexao-mysql:3306/conexao_sorte_resultados
    user: ${SPRING_DATASOURCE_USERNAME:conexao_sorte}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false

  # ===== REDIS CONFIGURATION =====
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          enabled: true
          max-active: 20
          max-idle: 8
          min-idle: 2

  # ===== SECURITY JWT CONFIGURATION =====
  security:
    oauth2:
      resourceserver:
        jwt:
          # Configuração para validação de tokens (não geração)
          jwk-set-uri: ${conexao-de-sorte-jwt-jwks-uri:${JWT_JWKS_URI:http://localhost:8081/.well-known/jwks.json}}
          issuer-uri: ${conexao-de-sorte-jwt-issuer:${JWT_ISSUER:https://auth.conexaodesorte.com}}

# ===== APLICAÇÃO ESPECÍFICA =====
aplicacao:
  microservico:
    nome: resultados
    versao: "@project.version@"
    descricao: "Microserviço de gerenciamento de resultados de loteria"
  
  # Configuração JWT adicional
  jwt:
    # Chaves para validação (não geração)
    chave-assinatura: ${JWT_SIGNING_KEY:}
    chave-verificacao: ${JWT_VERIFICATION_KEY:}
    id-chave: ${JWT_KEY_ID:}
    segredo: ${JWT_SECRET:}
    emissor: https://conexaodesorte.com.br
    audiencia: conexao-de-sorte-frontend-app
    algoritmo: RS256
    # Configurações específicas para consumo de tokens
    validacao:
      habilitado: true
      modo-estrito: true
      requer-expiracao: true
      desvio-relogio: PT30S

  # Configuração de Criptografia
  criptografia:
    chave-mestra: ${ENCRYPTION_MASTER_KEY:}
    algoritmo: AES-256-GCM
    rotacao-chaves: P30D # 30 dias

  # Cache Configuration
  cache:
    habilitado: true
    ttl:
      resultados: PT5M
      ranking: PT1H
      estatisticas: PT10M

  # Rate Limiting
  limite-taxa:
    requisicoes-por-minuto: 100
    capacidade-rajada: 50

# ===== AZURE LOGGING =====
logging:
  level:
    '[com.azure]': INFO
    '[com.azure.security.keyvault]': INFO
    '[org.springframework.cloud.azure]': INFO
    '[br.tec.facilitaservicos.resultados]': INFO

# ===== MANAGEMENT ENDPOINTS (HARDENED) =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
        exclude: env,configprops,beans,conditions,mappings,threaddump,heapdump,startup
      base-path: /actuator
      cors:
        allowed-origins: "https://monitoring.conexaodesorte.com.br"
        allowed-methods: GET
  endpoint:
    health:
      show-details: when_authorized
      show-components: when_authorized
    env:
      enabled: false
    configprops:
      enabled: false
    beans:
      enabled: false
    conditions:
      enabled: false
    mappings:
      enabled: false
    threaddump:
      enabled: false
    heapdump:
      enabled: false
  health:
    keyvault:
      enabled: true
    db:
      enabled: true
    redis:
      enabled: true
  # Security for actuator endpoints
  security:
    enabled: true
    roles: ACTUATOR

# ===== CONFIGURAÇÕES CUSTOMIZADAS AZURE =====
azure:
  keyvault:
    enabled: ${AZURE_KEYVAULT_ENABLED:true}
    endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
    fallback:
      enabled: true # Permite fallback para variáveis de ambiente
      local-properties: true

# ===== SERVER CONFIGURATION =====
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
  http2:
    enabled: true