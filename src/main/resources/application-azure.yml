# =============================================================================
# CONFIGURAÇÃO AZURE KEY VAULT - RESULTADOS MICROSERVICE
# =============================================================================
# ✅ Configuração específica para o microserviço de resultados
# ✅ Usa Spring Cloud Azure para integração com Azure Key Vault
# ✅ Compatível com deployment via Docker
# =============================================================================

spring:
  config:
    activate:
      on-profile: azure
    import:
      - "optional:classpath:application-prod.yml"

  # ===== SPRING CLOUD AZURE =====
  cloud:
    azure:
      profile:
        tenant-id: ${AZURE_TENANT_ID:}
      credential:
        client-id: ${AZURE_CLIENT_ID:}
        managed-identity-enabled: false

      # Azure Key Vault Secrets
      keyvault:
        secret:
          enabled: true
          endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
          property-sources:
            - endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
              name: resultados-microservice-secrets
              case-sensitive: false

  # ===== DATABASE CONFIGURATION (R2DBC REATIVO) =====
  # Primary: Azure Key Vault secrets
  # Fallback: Environment variables from container
  r2dbc:
    url: ${conexao-de-sorte-database-url:r2dbc:mysql://conexao-mysql:3306/conexao_de_sorte?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=America/Sao_Paulo}
    username: ${conexao-de-sorte-database-username:${DATABASE_USERNAME:resultados_user}}
    password: ${conexao-de-sorte-database-password:${DATABASE_PASSWORD:}}
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30m
      max-acquire-time: 60s

  # ===== FLYWAY CONFIGURATION (JDBC para migrations) =====
  flyway:
    enabled: true
    url: ${conexao-de-sorte-database-url:jdbc:mysql://conexao-mysql:3306/conexao_de_sorte?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=America/Sao_Paulo}
    user: ${conexao-de-sorte-database-username:${DATABASE_USERNAME:resultados_user}}
    password: ${conexao-de-sorte-database-password:${DATABASE_PASSWORD:}}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false

  # ===== REDIS CONFIGURATION =====
  data:
    redis:
      host: ${conexao-de-sorte-redis-host:${REDIS_HOST:redis}}
      port: ${conexao-de-sorte-redis-port:${REDIS_PORT:6379}}
      password: ${conexao-de-sorte-redis-password:${REDIS_PASSWORD:}}
      timeout: 2000ms
      lettuce:
        pool:
          enabled: true
          max-active: 20
          max-idle: 8
          min-idle: 2

  # ===== SECURITY JWT CONFIGURATION =====
  security:
    oauth2:
      resourceserver:
        jwt:
          # Configuração para validação de tokens (não geração)
          jwk-set-uri: ${conexao-de-sorte-jwt-jwks-uri:${JWT_JWKS_URI:http://localhost:8081/.well-known/jwks.json}}
          issuer-uri: ${conexao-de-sorte-jwt-issuer:${JWT_ISSUER:https://auth.conexaodesorte.com}}

# ===== APLICAÇÃO ESPECÍFICA =====
aplicacao:
  microservico:
    nome: resultados
    versao: "@project.version@"
    descricao: "Microserviço de gerenciamento de resultados de loteria"
  
  # Configuração JWT adicional
  jwt:
    # Chaves para validação (não geração)
    chave-assinatura: ${conexao-de-sorte-jwt-signing-key:${JWT_SIGNING_KEY:}}
    chave-verificacao: ${conexao-de-sorte-jwt-verification-key:${JWT_VERIFICATION_KEY:}}
    id-chave: ${conexao-de-sorte-jwt-key-id:${JWT_KEY_ID:}}
    segredo: ${conexao-de-sorte-jwt-secret:${JWT_SECRET:}}
    emissor: https://conexaodesorte.com.br
    audiencia: conexao-de-sorte-frontend-app
    algoritmo: RS256
    # Configurações específicas para consumo de tokens
    validacao:
      habilitado: true
      modo-estrito: true
      requer-expiracao: true
      desvio-relogio: PT30S

  # Configuração de Criptografia
  criptografia:
    chave-mestra: ${conexao-de-sorte-encryption-master-key:${ENCRYPTION_MASTER_KEY:}}
    algoritmo: AES-256-GCM
    rotacao-chaves: P30D # 30 dias

  # Cache Configuration
  cache:
    habilitado: true
    ttl:
      resultados: PT5M
      ranking: PT1H
      estatisticas: PT10M

  # Rate Limiting
  limite-taxa:
    requisicoes-por-minuto: 100
    capacidade-rajada: 50

# ===== AZURE LOGGING =====
logging:
  level:
    '[com.azure]': INFO
    '[com.azure.security.keyvault]': INFO
    '[org.springframework.cloud.azure]': INFO
    '[br.tec.facilitaservicos.resultados]': INFO

# ===== MANAGEMENT ENDPOINTS =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
  health:
    keyvault:
      enabled: true
    db:
      enabled: true
    redis:
      enabled: true

# ===== CONFIGURAÇÕES CUSTOMIZADAS AZURE =====
azure:
  keyvault:
    enabled: ${AZURE_KEYVAULT_ENABLED:true}
    endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
    fallback:
      enabled: true # Permite fallback para variáveis de ambiente
      local-properties: true

# ===== SERVER CONFIGURATION =====
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
  http2:
    enabled: true