# =============================================================================
# CONFIGURAÇÃO AZURE KEY VAULT - RESULTADOS MICROSERVICE
# =============================================================================
# ✅ Configuração específica para o microserviço de resultados
# ✅ Usa Spring Cloud Azure para integração com Azure Key Vault
# ✅ Compatível com deployment via Docker
# =============================================================================

spring:
  config:
    activate:
      on-profile: azure
    import:
      - "optional:configtree:/run/secrets/"
      - "optional:classpath:application-prod.yml"

  # ===== SPRING CLOUD AZURE (CONFIGURAÇÃO OIDC PURA) =====
  cloud:
    # Desabilitar verificação de compatibilidade Spring Boot/Cloud
    compatibility-verifier:
      enabled: false
    azure:
      profile:
        tenant-id: ${AZURE_TENANT_ID:}
      credential:
        client-id: ${AZURE_CLIENT_ID:}
        # ✅ DESABILITAR Managed Identity para evitar erro 169.254.169.254
        managed-identity-enabled: false
        # ✅ OIDC Configuration - 100% keyless authentication
        federated-token-credential-enabled: true

      # Azure Key Vault Secrets - HABILITADO para buscar segredos
      keyvault:
        secret:
          enabled: true
          property-sources:
            - endpoint: ${AZURE_KEYVAULT_ENDPOINT}
              name: ${AZURE_KEYVAULT_NAME:kv-conexao-de-sorte}


  # ===== DATABASE CONFIGURATION (R2DBC REATIVO) =====
  # Segredos vindos do Azure Key Vault: ${AZURE_KEYVAULT_NAME}
  r2dbc:
    url: ${conexao-de-sorte-database-url:r2dbc:mysql://conexao-mysql:3306/conexao_sorte_resultados?useSSL=true&allowPublicKeyRetrieval=true}
    username: ${conexao-de-sorte-database-username:}
    password: ${conexao-de-sorte-database-password:}
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30m
      max-acquire-time: 60s

  # ===== FLYWAY CONFIGURATION (JDBC para migrations) =====
  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  # ===== REDIS CONFIGURATION =====
  data:
    redis:
      host: ${conexao-de-sorte-redis-host:conexao-redis}
      port: ${conexao-de-sorte-redis-port:6379}
      password: ${conexao-de-sorte-redis-password:}
      database: ${conexao-de-sorte-redis-database:2}  # DB 2 para resultados
      timeout: 2000ms
      lettuce:
        pool:
          enabled: true
          max-active: 20
          max-idle: 8
          min-idle: 2
          max-wait: 3000ms



  # ===== SECURITY JWT CONFIGURATION =====
  security:
    oauth2:
      resourceserver:
        jwt:
          # Configuração para validação de tokens (não geração)
          jwk-set-uri: ${conexao-de-sorte-jwt-jwks-uri:http://conexao-auth:8081/.well-known/jwks.json}
          issuer-uri: ${conexao-de-sorte-jwt-issuer:https://auth.conexaodesorte.com}

# ===== APLICAÇÃO ESPECÍFICA =====
aplicacao:
  microservico:
    nome: resultados
    versao: "1.0.0"
    descricao: "Microserviço de gerenciamento de resultados de loteria"
  
  # Configuração JWT adicional - Segredos do Azure Key Vault
  jwt:
    # Chaves para validação (não geração)
    chave-assinatura: ${conexao-de-sorte-jwt-signing-key:}
    chave-verificacao: ${conexao-de-sorte-jwt-verification-key:}
    id-chave: ${conexao-de-sorte-jwt-key-id:}
    segredo: ${conexao-de-sorte-jwt-secret:}
    chave-publica: ${conexao-de-sorte-jwt-publickey:}
    chave-privada: ${conexao-de-sorte-jwt-privatekey:}
    emissor: https://conexaodesorte.com.br
    audiencia: conexao-de-sorte-frontend-app
    algoritmo: RS256
    # Configurações específicas para consumo de tokens
    validacao:
      habilitado: true
      modo-estrito: true
      requer-expiracao: true
      desvio-relogio: PT30S

  # Configuração de Criptografia - Segredos do Azure Key Vault
  criptografia:
    chave-mestra: ${conexao-de-sorte-encryption-master-key:}
    senha-mestra: ${conexao-de-sorte-encryption-master-password:}
    chave-backup: ${conexao-de-sorte-encryption-backup-key:}
    algoritmo: AES-256-GCM
    rotacao-chaves: P30D # 30 dias

  # Cache Configuration
  cache:
    habilitado: true
    ttl:
      resultados: PT5M
      ranking: PT1H
      estatisticas: PT10M

  # Rate Limiting
  limite-taxa:
    requisicoes-por-minuto: 100
    capacidade-rajada: 50

# ===== AZURE LOGGING =====
logging:
  level:
    '[com.azure]': INFO
    '[com.azure.security.keyvault]': INFO
    '[org.springframework.cloud.azure]': INFO
    '[br.tec.facilitaservicos.resultados]': INFO

# ===== MANAGEMENT ENDPOINTS (HARDENED) =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
        exclude: env,configprops,beans,conditions,mappings,threaddump,heapdump,startup
      base-path: /actuator
      cors:
        allowed-origins: "https://monitoring.conexaodesorte.com.br"
        allowed-methods: GET
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
    env:
      enabled: false
    configprops:
      enabled: false
    beans:
      enabled: false
    conditions:
      enabled: false
    mappings:
      enabled: false
    threaddump:
      enabled: false
    heapdump:
      enabled: false
  health:
    keyvault:
      enabled: true
    db:
      enabled: true
    redis:
      enabled: true
  # Security for actuator endpoints
  security:
    enabled: true
    roles: ACTUATOR

# ===== CONFIGURAÇÕES CUSTOMIZADAS AZURE =====
azure:
  keyvault:
    enabled: ${AZURE_KEYVAULT_ENABLED:true}
    endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
    fallback:
      enabled: true # Permite fallback para variáveis de ambiente
      local-properties: true

# ===== SERVER CONFIGURATION =====
server:
  port: ${SERVER_PORT:8082}
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
  http2:
    enabled: true
