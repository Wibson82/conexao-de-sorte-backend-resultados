
services:
  resultados:
    image: ${RESULTADOS_IMAGE:-ghcr.io/wibson82/conexao-de-sorte-backend-resultados:latest}
    environment:
      SPRING_PROFILES_ACTIVE: "prod"
      RESULTADOS_LOG_LEVEL: "INFO"
      SERVER_PORT: 8083  # Configurar porta interna como 8083

      # Configura√ß√µes de Banco de Dados (R2DBC)
      SPRING_R2DBC_URL: "r2dbc:mysql://conexao-mysql:3306/conexao_de_sorte"
      SPRING_R2DBC_USERNAME: "conexao"
      SPRING_R2DBC_PASSWORD: "conexao123"  # Tempor√°rio para teste

      # Configura√ß√µes Redis
      SPRING_DATA_REDIS_HOST: "conexao-redis"
      SPRING_DATA_REDIS_PORT: "6379"
      SPRING_DATA_REDIS_DATABASE: "5"

      # Configura√ß√µes b√°sicas do servi√ßo
      LOGGING_LEVEL_ROOT: "INFO"
    networks:
      - conexao-network-swarm
    # volumes:
    #   - ./logs:/app/logs  # Removido temporariamente devido a Permission denied
    ports:
      - "8083:8083"  # Usar porta 8083 para evitar conflito com notifications (8082)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # ==========================================================================
    # üè∑Ô∏è LABELS PARA INTEGRA√á√ÉO COM GATEWAY - NOVO PADR√ÉO
    # ==========================================================================
    labels:
      # Habilitar descoberta pelo Gateway (n√£o mais diretamente pelo Traefik)
      - "traefik.enable=false"  # Gateway ser√° o ponto de entrada
      - "gateway.enable=true"   # Descoberta pelo Gateway
      - "gateway.service.name=conexao-resultados"
      - "gateway.service.port=8083"
      - "gateway.service.path=/rest/resultados"
      - "gateway.health.path=/actuator/health"

      # Network para comunica√ß√£o interna
      - "com.docker.network.name=conexao-network-swarm"

      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Resultados"
      - "org.opencontainers.image.description=Microservi√ßo de resultados e loterias"
      - "org.opencontainers.image.version=1.0.0"
      - "microservice.type=business"
      - "microservice.category=results"

volumes:
  resultados_data:
    name: conexao_resultados_data

networks:
  conexao-network-swarm:
    name: conexao-network-swarm
    external: true
